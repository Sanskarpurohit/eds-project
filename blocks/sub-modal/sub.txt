Global font

* {

  font-family: "Oswald", sans-serif;

}

/* Modal Overlay */

.sub-modal {

  display: none;

  position: fixed;

  z-index: 9999;

  top: 0;

  left: 0;

  width: 100%;

  height: 100%;

  background-color: rgba(0, 0, 0, 0.6);

  padding: 60px 20px;

  box-sizing: border-box;

  overflow-y: auto;

  transition: opacity 0.3s ease-in-out;

}

.sub-modal.show {

  display: block;

}

/* Modal Content Sections */

.modal-first,

.modal-second,

.modal-third {

  background: #fff;
  margin: 0px auto;
  padding: 20px 24px;
  width: 100%;
  max-width: 600px;
  /* border-radius: 8px; */
  /* box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3); */
  box-sizing: border-box;

}

/* Input Styling */

.modal-input input {

  width: 100%;

  padding: 12px;

  margin-top: 10px;

  border: 1px solid #ccc;

  border-radius: 4px;

  font-size: 16px;

  box-sizing: border-box;

}

/* Button Styling */

.modal-button {

  display: inline-block;

  padding: 12px 20px;

  margin-top: 15px;

  background-color: #009688;

  color: white;

  border: none;

  border-radius: 4px;

  font-size: 16px;

  cursor: pointer;

  transition: background-color 0.3s ease;

}

.modal-button:hover {

  background-color: #00796b;

}

/* Close Button (Optional) */

.close-btn {

  position: absolute;

  top: 20px;

  right: 25px;

  background: none;

  color: white;

  border: none;

  font-size: 28px;

  cursor: pointer;

}

 

 // script js  


 (() => {
  console.log("Modal Working");

  const MODAL_DOC_URL = '/modal.plain.html'; // Make sure this file exists with your modals

  let modalContainer;

  // Fetch and inject modals from fragment

  fetch(MODAL_DOC_URL)

    .then(res => {

      if (!res.ok) throw new Error('Cannot load modal fragment');

      return res.text();

    })

    .then(html => {

      modalContainer = document.createElement('div');

      modalContainer.style.display = 'none';

      modalContainer.innerHTML = html;

      document.body.appendChild(modalContainer);

      // Add ID to each modal based on its custom class

      modalContainer.querySelectorAll('.sub-modal').forEach(modal => {

        const customClass = [...modal.classList].find(cls => cls.startsWith('custom-'));

        if (customClass) modal.id = customClass;

        // Outside click to close

        modal.addEventListener('click', e => {

          if (e.target === modal) hideAllModals();

        });

      });

      // Add close button handlers if present

      modalContainer.querySelectorAll('.close-btn').forEach(btn => {

        btn.addEventListener('click', hideAllModals);

      });

    })

    .catch(err => console.error('Modal load error:', err));

  // Hide all modals

  function hideAllModals() {

    if (!modalContainer) return;

    modalContainer.style.display = 'none';

    modalContainer.querySelectorAll('.sub-modal.show').forEach(m => m.classList.remove('show'));

  }

  // Show a specific modal by ID

  function showModalById(id) {

    if (!modalContainer) return;

    const modal = modalContainer.querySelector(`#${id}`);

    if (!modal) return;

    hideAllModals();

    modalContainer.style.display = 'block';

    modal.classList.add('show');

  }

  // Global link click handler

  document.addEventListener('click', e => {

    const anchor = e.target.closest('a[href^="#custom-"]');

    if (anchor) {

      e.preventDefault();

      const id = anchor.getAttribute('href').substring(1);

      showModalById(id);

    }

  });

  // ESC to close

  document.addEventListener('keydown', e => {

    if (e.key === 'Escape') {

      hideAllModals();

    }

  });

})();
 

// Set up all modals with class 'sub-modal'

const modals = document.querySelectorAll('.sub-modal');

modals.forEach(modal => {

  const customClass = [...modal.classList].find(c => c.startsWith('custom-'));

  if (!customClass) return;

  // Give the modal an ID if it doesn't have one

  if (!modal.id) modal.id = customClass;

  // Assign structure class names

  const outerDivs = modal.querySelectorAll(':scope > div');

  if (outerDivs[0]) {

    outerDivs[0].classList.add('modal-first');

    const inner = outerDivs[0].querySelector('div');

    if (inner) inner.classList.add('modal-text');

  }

  if (outerDivs[1]) {

    outerDivs[1].classList.add('modal-second');

    const inner = outerDivs[1].querySelector('div');

    if (inner && !inner.querySelector('input')) {

      inner.classList.add('modal-input');

      const input = document.createElement('input');
      const inputValue = input.innerText;
      console.log(inputValue);


      input.type = 'email';

      input.placeholder = 'Enter your email';

      inner.appendChild(input);

    }

  }

  if (outerDivs[2]) {

    outerDivs[2].classList.add('modal-third');

    const inner = outerDivs[2].querySelector('div');

    if (inner) {

      inner.classList.add('modal-footer');

      const h6 = inner.querySelector('h6');

      if (h6) {

        const a = h6.querySelector('a');

        if (a) {

          const btn = document.createElement('button');

          btn.textContent = 'Subscribe';

          btn.className = 'modal-button';

          inner.appendChild(btn);

          h6.remove();

        }

      }

    }

  }

  // Close modal on background click

  modal.addEventListener('click', (e) => {

    if (!e.target.closest('.modal-first, .modal-second, .modal-third')) {

      modal.classList.remove('show');

    }

  });

});

// Open modal on link click

document.querySelectorAll('a[href^="#custom-"]').forEach(link => {

  link.addEventListener('click', e => {

    e.preventDefault();

    const targetId = link.getAttribute('href').substring(1);

    const modal = document.getElementById(targetId);

    if (modal) {

      modal.classList.add('show');

    } else {

      console.warn(`Modal with ID "${targetId}" not found.`);

    }

  });

});

// Close on ESC key

document.addEventListener('keydown', (e) => {

  if (e.key === 'Escape') {

    document.querySelectorAll('.sub-modal.show').forEach(modal => {

      modal.classList.remove('show');

    });

  }

});
// Listen to all modal subscribe buttons

document.addEventListener('click', function (e) {

  if (e.target.classList.contains('modal-button')) {

    const modal = e.target.closest('.sub-modal');

    const emailInput = modal?.querySelector('.modal-second input[type="email"]');

    if (emailInput && emailInput.value.trim()) {

      const email = emailInput.value.trim();

      // Push to dataLayer

      window.dataLayer = window.dataLayer || [];

      window.dataLayer.push({

        event: 'modalSubscribe',

        email: email,

        modalId: modal.id || null

      });

      console.log('Email captured:', email);

      // Optional: close the modal after submit
      modal.classList.remove('show');
      emailInput.value='';

    } else {

      alert('Please enter a valid email address.');

    }

  }

});
 
 // block js 





 const modals = document.querySelectorAll('.sub-modal');

modals.forEach(modal => {

  const customClass = [...modal.classList].find(c => c.startsWith('custom-'));

  if (!customClass) return;

  // Give the modal an ID if it doesn't have one

  if (!modal.id) modal.id = customClass;

  // Assign structure class names

  const outerDivs = modal.querySelectorAll(':scope > div');

  if (outerDivs[0]) {

    outerDivs[0].classList.add('modal-first');

    const inner = outerDivs[0].querySelector('div');

    if (inner) inner.classList.add('modal-text');

  }

  if (outerDivs[1]) {

    outerDivs[1].classList.add('modal-second');

    const inner = outerDivs[1].querySelector('div');

    if (inner && !inner.querySelector('input')) {

      inner.classList.add('modal-input');

      const input = document.createElement('input');
      const inputValue = input.innerText;
      console.log(inputValue);


      input.type = 'email';

      input.placeholder = 'Enter your email';

      inner.appendChild(input);

    }

  }

  if (outerDivs[2]) {

    outerDivs[2].classList.add('modal-third');

    const inner = outerDivs[2].querySelector('div');

    if (inner) {

      inner.classList.add('modal-footer');

      const h6 = inner.querySelector('h6');

      if (h6) {

        const a = h6.querySelector('a');

        if (a) {

          const btn = document.createElement('button');

          btn.textContent = 'Subscribe';

          btn.className = 'modal-button';

          inner.appendChild(btn);

          h6.remove();

        }

      }

    }

  }

  // Close modal on background click

  modal.addEventListener('click', (e) => {

    if (!e.target.closest('.modal-first, .modal-second, .modal-third')) {

      modal.classList.remove('show');

    }

  });

});

// Open modal on link click

document.querySelectorAll('a[href^="#custom-"]').forEach(link => {

  link.addEventListener('click', e => {

    e.preventDefault();

    const targetId = link.getAttribute('href').substring(1);

    const modal = document.getElementById(targetId);

    if (modal) {

      modal.classList.add('show');

    } else {

      console.warn(`Modal with ID "${targetId}" not found.`);

    }

  });

});

// Close on ESC key

document.addEventListener('keydown', (e) => {

  if (e.key === 'Escape') {

    document.querySelectorAll('.sub-modal.show').forEach(modal => {

      modal.classList.remove('show');

    });

  }

});
// Listen to all modal subscribe buttons

document.addEventListener('click', function (e) {

  if (e.target.classList.contains('modal-button')) {

    const modal = e.target.closest('.sub-modal');

    const emailInput = modal?.querySelector('.modal-second input[type="email"]');

    if (emailInput && emailInput.value.trim()) {

      const email = emailInput.value.trim();

      // Push to dataLayer

      window.dataLayer = window.dataLayer || [];

      window.dataLayer.push({

        event: 'modalSubscribe',

        email: email,

        modalId: modal.id || null

      });

      console.log('Email captured:', email);

      // Optional: close the modal after submit
      modal.classList.remove('show');
      emailInput.value='';

    } else {

      alert('Please enter a valid email address.');

    }

  }

});